# This is a basic workflow to help you get started with Actions

name: publish-to-cocoapods

# Controls when the workflow will run
on:
    # Triggers the workflow on push or pull request events but only for the main branch
    push:
        branches: [main]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    # This workflow contains a single job called "build"
    publish:
        # The type of runner that the job will run on
        runs-on: self-hosted

        if: "!startsWith(github.event.head_commit.message, 'chore(release): ')"

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0
                  token: ${{ secrets.HIGH5_BOT_TOKEN }}

            - name: Configuring Git and NPM
              run: |
                  git config --global user.name "high5-bot"
                  git config --global user.email "me+high5@dunklestoast.de"

            - uses: maxim-lobanov/setup-xcode@v1
              with:
                  xcode-version: "^13.2.1"

            - uses: fwal/setup-swift@v1
              with:
                  swift-version: "5.5.3"

            - name: Get swift version
              run: swift --version

            - name: Install Cocoapods
              run: gem install cocoapods

            - uses: actions/setup-node@v2
              with:
                  node-version: "16"
                  
            - name: Install yarn
              run: npm i yarn --global

            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"

            - uses: actions/cache@v2
              id: yarn-cache
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Installing dependencies
              run: yarn

            - name: Release It
              run: yarn release --ci
              env:
                  GITHUB_TOKEN: ${{ secrets.HIGH5_BOT_TOKEN }}
                  TOOLCHAINS: "swift"
                  COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
